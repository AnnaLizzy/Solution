@model List<ListLocationVM>
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h4>This is Location Địa điểm trực</h4>
<h4 data-i18n="title"></h4>
<div>
    <a asp-action="Create"><i class="bi bi-plus"></i>Create New</a>
</div>
<div class="table-responsive">
    <table class="table table-hover table-bordered">
        <thead>
            <tr>
                <th class="text-center align-middle">ID</th>
                <th class="text-center align-middle">Tên địa điểm</th>
                <th class="text-center align-middle">Ngày tạo đơn</th>
                <th class="text-center align-middle">Trạng thái</th>
                <th class="text-center align-middle">Thao tác</th>
            </tr>
        </thead>
        <tbody id="locationTableBody">
            <!-- Nội dung bảng sẽ được tạo bằng JavaScript -->
        </tbody>
    </table>
</div>
<div class="col-lg-4 mx-auto">
    <div class="d-flex justify-content-center mt-3">
        <li class="page-item">
            <a id="previousPage" class="page-link"><i class="fa fa-angle-double-left" aria-hidden="true"></i></a>
        </li>
        <ul id="pagination" class="pagination pagination-primary m-4">           
        </ul>
        <li class="page-item">
           <a id="nextPage" class="page-link"><i class="fa fa-angle-double-right" aria-hidden="true"></i></a>
        </li>
        <div class="input-group input-group-static">
            <label class="control-label">Go to:</label>
            <input id="goToPage" type="number" min="1" style="width: 50px; height:30px;" />
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            var data = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model));
            var currentPage = 1;
            var itemsPerPage = 10;

            function renderTable(data) {
                $('#locationTableBody').empty();
                $.each(data, function (index, item) {
                    var statusText;
                    switch (item.SignStatus) {
                        case 0:
                            statusText = 'Tạm lưu';
                            break;
                        case 1:
                            statusText = 'Chờ ký';
                            break;
                        case 2:
                            statusText = 'Đã ký';
                            break;
                        default:
                            statusText = 'Trạng thái không xác định';
                            break;
                    }

                    var row = `<tr>
                                        <td class="text-center align-middle">${item.ListID}</td>
                                        <td class="text-center align-middle">${item.LocationName}</td>
                                        <td class="text-center align-middle">${item.CreateTime}</td>
                                        <td class="text-center align-middle">${statusText}</td>
                                        <td class="text-center align-middle">
                                            <a href="/Location/Update/${item.ListID}">Edit</a> |
                                            <a href="/Location/Details/${item.ListID}">Details</a> |
                                            <a href="#" data-bs-toggle="modal" data-bs-target="#exampleModal" data-id="${item.ListID}">Delete</a>
                                        </td>
                                    </tr>`;
                    $('#locationTableBody').append(row);
                });
            }

            function displayPage(page) {
                if (page < 1) page = 1;
                if (page > pageCount) page = pageCount;
                var start = (page - 1) * itemsPerPage;
                var end = start + itemsPerPage;
                var pageItems = data.slice(start, end);
                renderTable(pageItems);

                $('#pagination li').removeClass('active');
                $('#pagination li').eq(page - 1).addClass('active');
                currentPage = page;
            }

            function setupPagination() {
                $('#pagination').empty();
                pageCount = Math.ceil(data.length / itemsPerPage);
                for (var i = 1; i <= pageCount; i++) {
                    $('#pagination').append(`<li class="page-item"><a class="page-link" href="#">${i}</a></li>`);
                }

                $('#pagination li').click(function (event) {
                    event.preventDefault();
                    var page = $(this).text();
                    displayPage(parseInt(page));
                });
            }

            $('#previousPage').click(function () {
                if (currentPage > 1) {
                    displayPage(currentPage - 1);
                }
            });

            $('#nextPage').click(function () {
                if (currentPage < pageCount) {
                    displayPage(currentPage + 1);
                }
            });

            $('#goToPage').keypress(function (event) {
                if (event.which == 13) {
                    var page = parseInt($(this).val());
                    if (page >= 1 && page <= pageCount) {
                        displayPage(page);
                    }
                }
            });

            setupPagination();
            displayPage(currentPage);
        });
    </script>
}

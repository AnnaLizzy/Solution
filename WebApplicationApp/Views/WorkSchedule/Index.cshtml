@model List<WorkScheduleViewModel>
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Work Schedule - Bảng sắp xếp ca tổng hợp";
}
<a asp-action="Create">Create</a>
<h3>Bảng sắp xếp ca tổng hợp</h3>
<div class="table-responsive">
    <table class="table table-bordered table-hover">
        <thead>
            <tr>
                <th>
                    Mã lịch làm việc
                </th>
                <th>
                    Tên nhân viên
                </th>
                <th>
                    Ca làm việc
                </th>
                <th>
                    Địa điểm làm việc
                </th>
                <th>
                    Thời gian bắt đầu
                </th>
                <th>
                    Thời gian kết thúc
                </th>
                <th>
                    Thao tác
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td class="text-center align-middle">
                        @Html.DisplayFor(modelItem => item.ScheduleID)
                    </td>
                    <td class="text-center align-middle">
                        @Html.DisplayFor(modelItem => item.EmployeeName)
                    </td>
                    <td class="text-center align-middle">
                        @Html.DisplayFor(modelItem => item.ShiftName)
                    </td>
                    <td class="text-center align-middle">
                        @Html.DisplayFor(modelItem => item.LocationName)
                    </td>
                    <td class="text-center align-middle">
                        @Html.DisplayFor(modelItem => item.StartTime)
                    </td>
                    <td class="text-center align-middle">
                        @Html.DisplayFor(modelItem => item.EndTime)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.ScheduleID">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.ScheduleID">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.ScheduleID">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
<div class="table-responsive pt-3" id='calendar'></div>
@section Scripts {
    <script src="~/lib/fullcalender-6.1.11/index.global.min.js"></script>
    <script src="~/lib/es5/rrule.min.js"></script>
    <script src="~/lib/fullcalender-6.1.11/packages/timegrid/index.global.min.js"></script>
    <script src="~/lib/fullcalender-6.1.11/packages/rrule/index.global.min.js"> </script>
    <script src="~/lib/fullcalender-6.1.11/packages/core/locales-all.global.min.js"></script>
    <script>

        document.addEventListener("DOMContentLoaded", function () {
            var today = "@DateTime.Now.ToString("yyyy-MM-dd")";
            var calendarEl = document.getElementById("calendar");
            var calendar = new FullCalendar.Calendar(calendarEl, {
                locale: 'vi',
                headerToolbar: {
                    left: 'prevYear,prev,next,nextYear today',
                    center: 'title',
                    right: 'dayGridMonth,dayGridWeek,dayGridDay,listWeek'
                },                
                weekNumbers: true,
                initialDate: today,
                editable: true,
                events: [
        @foreach (var item in Model)
        {
            var locationName = System.Web.HttpUtility.HtmlEncode(item.LocationName);
            var employeeNameEncoded = System.Web.HttpUtility.HtmlEncode(item.EmployeeName);
            var shiftNameEncoded = System.Web.HttpUtility.HtmlEncode(item.ShiftName);
            var startTimeEncoded = ((DateTime?)item.StartTime)?.ToString("yyyy-MM-dd");
            var endTimeEncoded = ((DateTime?)item.EndTime)?.ToString("yyyy-MM-dd");
            var frequency = item.Frequency;
            var interval = item.Interval;
            var databyweekday = item.ByWeekday;
            string[] weekdaysArray = databyweekday?.Split(',') ?? new string[0];
            string weekdays = JsonConvert.SerializeObject(weekdaysArray);
            <text>
                        {
                            title: '@Html.Raw(shiftNameEncoded) - @Html.Raw(employeeNameEncoded)',
                            rrule: {
                                freq: '@Html.Raw(frequency)',
                                interval: '@Html.Raw(interval)',
                                byweekday: @Html.Raw(weekdays),
                                dtstart: '@Html.Raw(startTimeEncoded)',
                                until: '@Html.Raw(endTimeEncoded)'
                            },
                              extendedProps: {
                                    employeeName: '@Html.Raw(employeeNameEncoded)',
                                    shiftName: '@Html.Raw(shiftNameEncoded)',
                                    frequency: '@Html.Raw(frequency)',
                                    interval: '@Html.Raw(interval)',
                                    weekdays: @Html.Raw(weekdays),
                                    startTime: '@Html.Raw(startTimeEncoded)',
                                    endTime: '@Html.Raw(endTimeEncoded)',
                              
                                    // Add other extended properties if needed
                                },
                                description: '@Html.Raw(locationName)',
                          },
            </text>
            }
                        ],
                eventClick: function (arg) {
                    var modal = document.createElement("div");
                    var title = arg.event.title;
                    var employeeName = arg.event.extendedProps.employeeName;
                    var shiftName = arg.event.extendedProps.shiftName;
                    var frequency = arg.event.extendedProps.frequency;
                    var interval = arg.event.extendedProps.interval;
                    var weekdays = arg.event.extendedProps.weekdays;
                    var startTime = arg.event.extendedProps.startTime;
                    var endTime = arg.event.extendedProps.endTime;
                    var locationName = arg.event.extendedProps.description;
                    modal.classList.add("modal");
                    modal.innerHTML = `
                                        <div class="modal-dialog">
                                            <div class="modal-content">
                                                <div class="modal-header">
                                                    <h5 class="modal-title">Detail : ${title}</h5>
                                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                                </div>
                                                <div class="modal-body">
                                                    <p>Tên nhân viên: ${employeeName}</p>
                                                    <p>Ca làm việc: ${shiftName}</p>
                                                    <p>Lặp lại sau : ${interval} lần </p>
                                                    <p>Lặp theo: ${frequency}</p>
                                                    <p>Ngày trong tuần : ${weekdays}</p>
                                                    <p>Ngày bắt đầu: ${startTime}</p>
                                                    <p>Ngày kết thúc : ${endTime}</p>
                                                    <p>Tên địa điểm: ${locationName}</p>                                                    
                                                </div>
                                            </div>
                                        </div>
                                    `;
                    document.body.appendChild(modal);
                    var bootstrapModal = new bootstrap.Modal(modal);
                    bootstrapModal.show();
                },
            });

            calendar.render();
            // var eventSources = calendar.getEvents();
            // console.log(eventSources);
        });
    </script>
}
